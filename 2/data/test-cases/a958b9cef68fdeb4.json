{"uid":"a958b9cef68fdeb4","name":"test_apply_privacy_statement_as_cookies","fullName":"test.test_conduit.TestConduit#test_apply_privacy_statement_as_cookies","historyId":"872d09629e369ed75739f6593b52373d","time":{"start":1680782621497,"stop":1680782626631,"duration":5134},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55f49270f243 <unknown>\n#1 0x55f4924d37a6 <unknown>\n#2 0x55f49251064d <unknown>\n#3 0x55f492510761 <unknown>\n#4 0x55f49254bda4 <unknown>\n#5 0x55f4925310ad <unknown>\n#6 0x55f492549932 <unknown>\n#7 0x55f492530e53 <unknown>\n#8 0x55f4925039ea <unknown>\n#9 0x55f492504b2e <unknown>\n#10 0x55f492763d5e <unknown>\n#11 0x55f492767a80 <unknown>\n#12 0x55f4927498b0 <unknown>\n#13 0x55f492768b63 <unknown>\n#14 0x55f49273af75 <unknown>\n#15 0x55f49278b998 <unknown>\n#16 0x55f49278bb27 <unknown>\n#17 0x55f4927a6c23 <unknown>\n#18 0x7f2c36a47b43 <unknown>","statusTrace":"self = <test_conduit.TestConduit object at 0x7f1a1c1b0580>\n\n    def test_apply_privacy_statement_as_cookies(self):\n>       cookie_accept_btn = WebDriverWait(self.browser, 5).until(EC.presence_of_element_located((By.CSS_SELECTOR, 'button[class=\"cookie__bar__buttons__button cookie__bar__buttons__button--accept\"]')))\n\ntest/test_conduit.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"9689d7531918a68b4870fe76d73b158d\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x7f1a1cf89f30>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x55f49270f243 <unknown>\nE       #1 0x55f4924d37a6 <unknown>\nE       #2 0x55f49251064d <unknown>\nE       #3 0x55f492510761 <unknown>\nE       #4 0x55f49254bda4 <unknown>\nE       #5 0x55f4925310ad <unknown>\nE       #6 0x55f492549932 <unknown>\nE       #7 0x55f492530e53 <unknown>\nE       #8 0x55f4925039ea <unknown>\nE       #9 0x55f492504b2e <unknown>\nE       #10 0x55f492763d5e <unknown>\nE       #11 0x55f492767a80 <unknown>\nE       #12 0x55f4927498b0 <unknown>\nE       #13 0x55f492768b63 <unknown>\nE       #14 0x55f49273af75 <unknown>\nE       #15 0x55f49278b998 <unknown>\nE       #16 0x55f49278bb27 <unknown>\nE       #17 0x55f4927a6c23 <unknown>\nE       #18 0x7f2c36a47b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_xunit_setup_method_fixture_TestConduit","time":{"start":1680782618847,"stop":1680782621496,"duration":2649},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55f49270f243 <unknown>\n#1 0x55f4924d37a6 <unknown>\n#2 0x55f49251064d <unknown>\n#3 0x55f492510761 <unknown>\n#4 0x55f49254bda4 <unknown>\n#5 0x55f4925310ad <unknown>\n#6 0x55f492549932 <unknown>\n#7 0x55f492530e53 <unknown>\n#8 0x55f4925039ea <unknown>\n#9 0x55f492504b2e <unknown>\n#10 0x55f492763d5e <unknown>\n#11 0x55f492767a80 <unknown>\n#12 0x55f4927498b0 <unknown>\n#13 0x55f492768b63 <unknown>\n#14 0x55f49273af75 <unknown>\n#15 0x55f49278b998 <unknown>\n#16 0x55f49278bb27 <unknown>\n#17 0x55f4927a6c23 <unknown>\n#18 0x7f2c36a47b43 <unknown>","statusTrace":"self = <test_conduit.TestConduit object at 0x7f1a1c1b0580>\n\n    def test_apply_privacy_statement_as_cookies(self):\n>       cookie_accept_btn = WebDriverWait(self.browser, 5).until(EC.presence_of_element_located((By.CSS_SELECTOR, 'button[class=\"cookie__bar__buttons__button cookie__bar__buttons__button--accept\"]')))\n\ntest/test_conduit.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"9689d7531918a68b4870fe76d73b158d\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x7f1a1cf89f30>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x55f49270f243 <unknown>\nE       #1 0x55f4924d37a6 <unknown>\nE       #2 0x55f49251064d <unknown>\nE       #3 0x55f492510761 <unknown>\nE       #4 0x55f49254bda4 <unknown>\nE       #5 0x55f4925310ad <unknown>\nE       #6 0x55f492549932 <unknown>\nE       #7 0x55f492530e53 <unknown>\nE       #8 0x55f4925039ea <unknown>\nE       #9 0x55f492504b2e <unknown>\nE       #10 0x55f492763d5e <unknown>\nE       #11 0x55f492767a80 <unknown>\nE       #12 0x55f4927498b0 <unknown>\nE       #13 0x55f492768b63 <unknown>\nE       #14 0x55f49273af75 <unknown>\nE       #15 0x55f49278b998 <unknown>\nE       #16 0x55f49278bb27 <unknown>\nE       #17 0x55f4927a6c23 <unknown>\nE       #18 0x7f2c36a47b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","steps":[],"attachments":[{"uid":"599b2debb16652cf","name":"stderr","source":"599b2debb16652cf.txt","type":"text/plain","size":159}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"_xunit_setup_method_fixture_TestConduit::0","time":{"start":1680782626681,"stop":1680782626682,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"test"},{"name":"suite","value":"test_conduit"},{"name":"subSuite","value":"TestConduit"},{"name":"host","value":"fv-az471-889"},{"name":"thread","value":"3049-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test.test_conduit"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"a958b9cef68fdeb4.json","parameterValues":[]}