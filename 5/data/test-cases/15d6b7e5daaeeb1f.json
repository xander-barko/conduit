{"uid":"15d6b7e5daaeeb1f","name":"test_apply_privacy_statement_as_cookies","fullName":"test.test_conduit.TestConduit#test_apply_privacy_statement_as_cookies","historyId":"872d09629e369ed75739f6593b52373d","time":{"start":1681289021314,"stop":1681289021383,"duration":69},"status":"failed","statusMessage":"AssertionError: assert 1 == 0\n +  where 1 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"4e9bf8d4fea2e4e62333d38c478ab732\", element=\"79b0613b-fbf5-4a5e-8cc7-6ad81767bdfd\")>])","statusTrace":"self = <test_conduit.TestConduit object at 0x7f598311e110>\n\n    def test_apply_privacy_statement_as_cookies(self):\n        cookie_accept_btn = WebDriverWait(self.browser, 5).until(EC.presence_of_element_located(\n            (By.CSS_SELECTOR, 'button[class=\"cookie__bar__buttons__button cookie__bar__buttons__button--accept\"]')))\n        cookie_accept_btn.click()\n        cookie_panel = self.browser.find_elements(By.ID, 'cookie-policy-panel')\n>       assert len(cookie_panel) == 0\nE       assert 1 == 0\nE        +  where 1 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"4e9bf8d4fea2e4e62333d38c478ab732\", element=\"79b0613b-fbf5-4a5e-8cc7-6ad81767bdfd\")>])\n\ntest/test_conduit.py:38: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_xunit_setup_method_fixture_TestConduit","time":{"start":1681289019035,"stop":1681289021313,"duration":2278},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 1 == 0\n +  where 1 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"4e9bf8d4fea2e4e62333d38c478ab732\", element=\"79b0613b-fbf5-4a5e-8cc7-6ad81767bdfd\")>])","statusTrace":"self = <test_conduit.TestConduit object at 0x7f598311e110>\n\n    def test_apply_privacy_statement_as_cookies(self):\n        cookie_accept_btn = WebDriverWait(self.browser, 5).until(EC.presence_of_element_located(\n            (By.CSS_SELECTOR, 'button[class=\"cookie__bar__buttons__button cookie__bar__buttons__button--accept\"]')))\n        cookie_accept_btn.click()\n        cookie_panel = self.browser.find_elements(By.ID, 'cookie-policy-panel')\n>       assert len(cookie_panel) == 0\nE       assert 1 == 0\nE        +  where 1 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"4e9bf8d4fea2e4e62333d38c478ab732\", element=\"79b0613b-fbf5-4a5e-8cc7-6ad81767bdfd\")>])\n\ntest/test_conduit.py:38: AssertionError","steps":[],"attachments":[{"uid":"ee1cf0e8ad3f1a61","name":"stderr","source":"ee1cf0e8ad3f1a61.txt","type":"text/plain","size":159}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"_xunit_setup_method_fixture_TestConduit::0","time":{"start":1681289021424,"stop":1681289021481,"duration":57},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"test"},{"name":"suite","value":"test_conduit"},{"name":"subSuite","value":"TestConduit"},{"name":"host","value":"fv-az555-785"},{"name":"thread","value":"3138-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test.test_conduit"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"15d6b7e5daaeeb1f.json","parameterValues":[]}